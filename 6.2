import pandas as pd

ratings = pd.read_csv('C:/Users/karpo/Desktop/Презентации аналитика/python/ml-latest-small/ml-latest-small/ratings.csv')
movie = pd.read_csv('C:/Users/karpo/Desktop/Презентации аналитика/python/ml-latest-small/ml-latest-small/movies.csv')
joined = ratings.merge(movie, on='movieId', how='left')

m_r = joined.groupby('title')['rating'].mean()
def mean_rating (row):
    
    dict1 = 'low rating'
    dict2 = 'medium rating'
    dict3 = 'high rating'
    
    for row['title'] in m_r:
        if m_r.any() in range(0, 3,):
            return  dict1
        if m_r.any() in range(2, 5):
            return  dict2
        if m_r.any() in range(4, 6) :
            return  dict3
            
joined ['class'] = joined.apply( mean_rating, axis = 1)

'''
Константин, помогите пожалуйста с данной задачей.
Написанный код не работает должным образом. Правильно ли я понимаю, что m_r должна быть внутри функции mean_rating?
Правда, если m_r внутри функции, то она не работает. Что нужно изменить чтобы функция работала и возвращала нужные значения?
Заранее спасибо!
'''
